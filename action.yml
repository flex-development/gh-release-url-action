# ACTION METADATA
# https://docs.github.com/actions/creating-actions/metadata-syntax-for-github-actions

---
name: gh-release-url
author: '@flex-development'
description: Create a URL for a GitHub release
inputs:
  artifact:
    description: the name of the release artifact to create a download url for
    required: false
  owner:
    default: ${{ github.repository_owner }}
    description: github repository owner
    required: false
  repo:
    default: ${{ github.event.repository.name }}
    description: github repository name
    required: false
  server:
    default: ${{ github.server_url }}
    description: github server url
    required: false
  tag-prefix:
    description: |
      the prefix to append to the release version when building the release tag component of the url
    required: false
  version:
    description: the release version or tag to create a url for
    required: true
outputs:
  artifact:
    description: the release artifact download url
    value: ${{ steps.url.outputs.artifact || '' }}
  tag:
    description: the release tag the urls were created with
    value: ${{ steps.tag.outputs.result }}
  url:
    description: the release url
    value: ${{ steps.url.outputs.release }}
runs:
  using: composite
  steps:
    - id: tag
      name: Build release tag
      shell: bash
      run: |
        set -e

        # capture release tag.
        tag=$(echo "${{ inputs.tag-prefix }}${{ inputs.version }}" | xargs)

        # set output.
        echo "result=$tag" >>$GITHUB_OUTPUT
    - id: url
      name: Build release url and release artifact download url
      shell: bash
      run: |
        set -e

        # capture artifact name, full repository name, common base url, and release tag.
        artifact=$(echo "${{ inputs.artifact }}" | xargs)
        repository=$(echo "${{ inputs.owner }}/${{ inputs.repo }}" | xargs)
        releases=$(echo "${{ inputs.server }}" | xargs)/$repository/releases
        tag=${{ steps.tag.outputs.result }}

        # set release url output.
        echo "release=$(echo "$releases/tag/$tag" | xargs)" >>$GITHUB_OUTPUT

        # set release artifact download url.
        if [[ -n "$artifact" ]]; then
          echo "artifact=$releases/download/$tag/$artifact" >>$GITHUB_OUTPUT
        fi
branding:
  color: blue
  icon: link
